/* Net WAIS_v_7 - IOPT */
/* Automatic code generated by IOPT2C XSLT transformation. */


#include <string.h>
#include "net_types.h"


#define ABS(x) (((x)>=0)?(x):-(x))


/* Array implementation: */


void createInitial_WAIS_v_7_NetMarking( WAIS_v_7_NetMarking* init_marking )
{
    memset( init_marking, 0, sizeof(*init_marking) );
    init_marking->p_4 = 0; /* Place Verify Conditions to START */
    init_marking->p_5 = 0; /* Place Rain Verified */
    init_marking->p_12 = 0; /* Place Humidity Verified */
    init_marking->p_15 = 0; /* Place Verify Conditions to STOP */
    init_marking->p_17 = 1; /* Place Irrigation STOP */
}

void createEmpty_WAIS_v_7_NetMarking( WAIS_v_7_NetMarking* empty_marking )
{
    empty_marking->p_4 = 0; /* Place Verify Conditions to START */
    empty_marking->p_5 = 0; /* Place Rain Verified */
    empty_marking->p_12 = 0; /* Place Humidity Verified */
    empty_marking->p_15 = 0; /* Place Verify Conditions to STOP */
    empty_marking->p_17 = 0; /* Place Irrigation STOP */
}

void add_WAIS_v_7_NetMarkings(
    WAIS_v_7_NetMarking* dest_marking,
    WAIS_v_7_NetMarking* source_marking )
{
    dest_marking->p_4 += source_marking->p_4; /* Place Verify Conditions to START */
    dest_marking->p_5 += source_marking->p_5; /* Place Rain Verified */
    dest_marking->p_12 += source_marking->p_12; /* Place Humidity Verified */
    dest_marking->p_15 += source_marking->p_15; /* Place Verify Conditions to STOP */
    dest_marking->p_17 += source_marking->p_17; /* Place Irrigation STOP */
}

void init_WAIS_v_7_OutputSignals(
    WAIS_v_7_PlaceOutputSignals* place_out,
    WAIS_v_7_EventOutputSignals* ev_out )
{
    memset( place_out, 0, sizeof(*place_out) );
    memset( ev_out, 0, sizeof(*ev_out) );
    ev_out->OuS_Valve = 0;
}

/* Transition 2 - Start Irrigation */
int t_2_enabled( WAIS_v_7_NetMarking* prev,
                    WAIS_v_7_NetMarking* avail )
{
    return ( avail->p_12 >= 1 );
}

int t_2_events( WAIS_v_7_InputSignalEvents* events )
{
    return (  1  );
}

int t_2_guards( WAIS_v_7_NetMarking* marking,
                   WAIS_v_7_InputSignals* inputs,
                   WAIS_v_7_PlaceOutputSignals* place_out,
                   WAIS_v_7_EventOutputSignals* ev_out )
{
    return (  1  );
}

void t_2_remove_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_12--;
}

void t_2_add_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_15++;
}

void t_2_generate_output_events( WAIS_v_7_OutputSignalEvents* ev_out )
{
    ev_out->OE_Avtivate = 1;
}


/* Transition 3 - Stop Irrigation */
int t_3_enabled( WAIS_v_7_NetMarking* prev,
                    WAIS_v_7_NetMarking* avail )
{
    return ( avail->p_17 >= 1 );
}

int t_3_events( WAIS_v_7_InputSignalEvents* events )
{
    return (  1  );
}

int t_3_guards( WAIS_v_7_NetMarking* marking,
                   WAIS_v_7_InputSignals* inputs,
                   WAIS_v_7_PlaceOutputSignals* place_out,
                   WAIS_v_7_EventOutputSignals* ev_out )
{
    return (  1  );
}

void t_3_remove_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_17--;
}

void t_3_add_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_4++;
}

void t_3_generate_output_events( WAIS_v_7_OutputSignalEvents* ev_out )
{
    ev_out->OE_Desactivate = 1;
}


/* Transition 6 - Verify if rain < 30% */
int t_6_enabled( WAIS_v_7_NetMarking* prev,
                    WAIS_v_7_NetMarking* avail )
{
    return ( avail->p_4 >= 1 );
}

int t_6_events( WAIS_v_7_InputSignalEvents* events )
{
    return (  1  );
}

int t_6_guards( WAIS_v_7_NetMarking* marking,
                   WAIS_v_7_InputSignals* inputs,
                   WAIS_v_7_PlaceOutputSignals* place_out,
                   WAIS_v_7_EventOutputSignals* ev_out )
{
    return ( inputs->InS_Rain_Sensor < 30 );
}

void t_6_remove_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_4--;
}

void t_6_add_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_5++;
}

void t_6_generate_output_events( WAIS_v_7_OutputSignalEvents* ev_out )
{
}


/* Transition 7 - Verify Soil Humidity < 30% */
int t_7_enabled( WAIS_v_7_NetMarking* prev,
                    WAIS_v_7_NetMarking* avail )
{
    return ( avail->p_5 >= 1 );
}

int t_7_events( WAIS_v_7_InputSignalEvents* events )
{
    return (  1  );
}

int t_7_guards( WAIS_v_7_NetMarking* marking,
                   WAIS_v_7_InputSignals* inputs,
                   WAIS_v_7_PlaceOutputSignals* place_out,
                   WAIS_v_7_EventOutputSignals* ev_out )
{
    return ( inputs->InS_Soil_Humidity_Sensor < 30 );
}

void t_7_remove_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_5--;
}

void t_7_add_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_12++;
}

void t_7_generate_output_events( WAIS_v_7_OutputSignalEvents* ev_out )
{
}


/* Transition 19 - Verify if Rain >= 30% */
int t_19_enabled( WAIS_v_7_NetMarking* prev,
                    WAIS_v_7_NetMarking* avail )
{
    return ( avail->p_15 >= 1 );
}

int t_19_events( WAIS_v_7_InputSignalEvents* events )
{
    return (  1  );
}

int t_19_guards( WAIS_v_7_NetMarking* marking,
                   WAIS_v_7_InputSignals* inputs,
                   WAIS_v_7_PlaceOutputSignals* place_out,
                   WAIS_v_7_EventOutputSignals* ev_out )
{
    return ( inputs->InS_Rain_Sensor >= 30 );
}

void t_19_remove_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_15--;
}

void t_19_add_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_17++;
}

void t_19_generate_output_events( WAIS_v_7_OutputSignalEvents* ev_out )
{
}


/* Transition 20 - Verify Soil Humidity >= 30% */
int t_20_enabled( WAIS_v_7_NetMarking* prev,
                    WAIS_v_7_NetMarking* avail )
{
    return ( avail->p_15 >= 1 );
}

int t_20_events( WAIS_v_7_InputSignalEvents* events )
{
    return (  1  );
}

int t_20_guards( WAIS_v_7_NetMarking* marking,
                   WAIS_v_7_InputSignals* inputs,
                   WAIS_v_7_PlaceOutputSignals* place_out,
                   WAIS_v_7_EventOutputSignals* ev_out )
{
    return ( inputs->InS_Soil_Humidity_Sensor >= 30 );
}

void t_20_remove_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_15--;
}

void t_20_add_marks( WAIS_v_7_NetMarking* marking )
{
    marking->p_17++;
}

void t_20_generate_output_events( WAIS_v_7_OutputSignalEvents* ev_out )
{
}


/* Input event processing: */
void WAIS_v_7_GenerateInputSignalEvents(
        WAIS_v_7_InputSignals *old_values,
        WAIS_v_7_InputSignals *new_values,
        WAIS_v_7_InputSignalEvents *events )
{
}

/* Output event processing: */
void WAIS_v_7_GenerateEventOutputSignals(
    WAIS_v_7_OutputSignalEvents *events,
    WAIS_v_7_EventOutputSignals *signals )
{
    int new_value;
    new_value = signals->OuS_Valve +events->OE_Avtivate -events->OE_Desactivate;
    if( new_value < 0 ) new_value = 0;
    if( new_value > 1 ) new_value = 1;
    signals->OuS_Valve = new_value;
}

/* Transition action processing: */
void WAIS_v_7_GenerateTransitionActionOutputSignals(
    WAIS_v_7_TransitionFiring *tfired,
    WAIS_v_7_NetMarking *marking,
    WAIS_v_7_EventOutputSignals *ev_out )
{
}

/* Place Output Processing */
void WAIS_v_7_GeneratePlaceOutputSignals(
    WAIS_v_7_NetMarking *marking,
    WAIS_v_7_InputSignals *inputs,
    WAIS_v_7_PlaceOutputSignals *place_out,
    WAIS_v_7_EventOutputSignals *ev_out )
{
}

